<?php    namespace common\components;    use common\models\TbOrdersSession;    use Yii;    use yii\filters\HostControl;    use yii\helpers\Url;    class CController extends \yii\web\Controller    {        public $setting;        public $enableCsrfValidation = false;        public function behaviors()        {            $siteName = isset(Yii::$app->params['SITE_NAME']) ? Yii::$app->params['SITE_NAME'] : 'vnexpress.net';            return [                'hostControl' => [                    'class' => HostControl::class,                    'allowedHosts' => [                        $siteName,                        '*.'.$siteName,                    ],                ],            ];        }         public function beforeAction($action)        {            if(in_array($action->id,['signup','login'])){                Yii::$app->request->enableCsrfValidation = true;            }            if (!parent::beforeAction($action))                return false;            return true;        }        public function init()        {            if(\Yii::$app->request->headers->get('X-Refresh-Cache') == \Yii::$app->params['refresh_cache']){                \Yii::$app->cache->flush();            }            parent::init();            if($this->setting === null){                $this->setting = CommonLib::getAllSettings();;            }        }        public function back()        {            return $this->redirect(Yii::$app->request->referrer);        }        /**         * Set return url for module in sessions         * @param mixed $url if not set, returnUrl will be current page         */        public function setReturnUrl($url = null)        {            Yii::$app->getSession()->set($this->module->id . '_return', $url ? Url::to($url) : Url::current());        }        /**         * Get return url for module from session         * @param mixed $defaultUrl if return url not found in sessions         * @return mixed         */        public function getReturnUrl($defaultUrl = null)        {            return Yii::$app->getSession()->get($this->module->id . '_return', $defaultUrl ? Url::to($defaultUrl) : Url::to('/admin/' . $this->module->id));        }    }